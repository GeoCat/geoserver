<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="release" default="info"
  xmlns:if="ant:if" xmlns:unless="ant:unless"
  >
  
  <!-- macro definitions -->
  <macrodef name="project-version">
    <attribute name="property"/>
    <attribute name="project.dir"/>
    <sequential>
      <loadfile
        encoding="UTF-8"
        property="@{property}"
        srcFile="@{project.dir}/pom.xml" >
        <filterchain>
          <tokenfilter>
            <containsregex pattern="^\s*&lt;version&gt;(\S*)&lt;/version&gt;$" replace="\1" />
          </tokenfilter>
          <filterreader classname="org.apache.tools.ant.filters.HeadFilter">
            <param name="lines" value="1"/>
          </filterreader>
          <striplinebreaks/>
        </filterchain>
      </loadfile>
    </sequential>
  </macrodef>
  
  <macrodef name="module-version">
    <attribute name="property"/>
    <attribute name="module.dir"/>
    <attribute name="skip" default="1"/>
    <sequential>
      <loadfile
        encoding="UTF-8"
        property="@{property}"
        srcFile="@{module.dir}/pom.xml" >
        <filterchain>
          <tokenfilter>
            <containsregex pattern="^\s*&lt;version&gt;(\S*)&lt;/version&gt;$" replace="\1" />
          </tokenfilter>
          <filterreader classname="org.apache.tools.ant.filters.HeadFilter">
            <param name="skip" value="@{skip}"/>
            <param name="lines" value="1"/>
          </filterreader>
          <striplinebreaks/>
        </filterchain>
      </loadfile>
    </sequential>
  </macrodef>
  
  <macrodef name="pom-property">
    <attribute name="property"/>
    <attribute name="pom.dir"/>
    <sequential>
      <loadfile
        encoding="UTF-8"
        property="@{property}"
        srcFile="@{pom.dir}/pom.xml" >
        <filterchain>
          <tokenfilter>
            <containsregex pattern="^\s*&lt;@{property}&gt;(\S*)&lt;/@{property}&gt;$" replace="\1" />
          </tokenfilter>
          <filterreader classname="org.apache.tools.ant.filters.HeadFilter">
            <param name="lines" value="1"/>
          </filterreader>
          <striplinebreaks/>
        </filterchain>
      </loadfile>
    </sequential>
  </macrodef>

  <macrodef name = "git">
      <attribute name = "command" />
      <attribute name = "dir" default = "" />
      <attribute name = "property" default = "" />
      <text name="line"/>
      <sequential>
          <exec unless:set="${@{property}}" failonerror="true"
                executable = "git"
                dir = "@{dir}"
                outputproperty = "@{property}" >
              <arg value = "@{command}" />
              <arg line = "@{line}" />
          </exec>
          <exec if:set="${@{property}}" failonerror="true"
                executable = "git"
                dir = "@{dir}">
              <arg value = "@{command}" />
              <arg line = "@{line}" />
          </exec>
      </sequential>
  </macrodef>
  
  <macrodef name = "sha">
      <attribute name = "dir" default = "" />
      <attribute name = "property"/>
      <sequential>
          <exec executable = "git"
                dir = "@{dir}"
                outputproperty = "@{property}" >
              <arg line = "rev-parse --short HEAD" />
          </exec>
      </sequential>
  </macrodef>
  
  <macrodef name = "git-tstamp">
      <attribute name = "dir" default = "" />
      <attribute name = "property"/>
      <sequential>
          <exec executable = "git"
                dir = "@{dir}"
                outputproperty = "@{property}" >
              <env key="TZ" value="UTC"/>
              <arg line = "log -1 --format=%cd --date=format:'%Y%m%dT%H%M'" />
          </exec>
      </sequential>
  </macrodef>

  <!-- collect properties -->
  <tstamp/>
  
  <property name="current" value="2.19-SNAPSHOT"/>
  <property name="release" value="2.19.1"/>
  
  <project-version property="enterprise.version" project.dir="../enterprise"/>
  <pom-property property="geocat.enterprise" pom.dir="../enterprise"></pom-property>
  <sha property="enterprise.sha" dir="../enterprise"></sha>
  <git-tstamp property="enterprise.tstamp"></git-tstamp>
  <sha property="themes.sha" dir="../docs/themes"></sha>
  <project-version property="geoserver.version" project.dir="../geoserver/src"/>
  <sha property="geoserver.sha" dir="../geoserver"></sha>
  <pom-property property="gs.version" pom.dir="../enterprise"></pom-property>
  
  <!-- generated properties -->
  <tstamp>
    <format property="USTAMP" pattern="yyyyMMdd'T'hhmmX" timezone="Z" locale="en,GB"/>
  </tstamp>
  <!--property name="enterprise.live" value="${geocat.enterprise}-${enterprise.sha}"/-->
  <loadresource property="enterprise.live">
    <propertyresource name="enterprise.version"/>
    <filterchain>
      <tokenfilter>
        <filetokenizer/>
        <replacestring from="-SNAPSHOT" to="-${enterprise.sha}"/>
      </tokenfilter>
    </filterchain>
  </loadresource>

  <property name="enterprise.live.tag" value="tags/live/${geocat.enterprise}-${USTAMP}"/>
  
  <!-- INFO -->
  <target name="info" description="List versions used to update build">
     <echo>geoserver enterprise:</echo>
     <echo>   geocat.enterprise: '${geocat.enterprise}'</echo>
     <echo>  enterprise version: '${enterprise.version}'</echo>
     <echo>      enterprise sha: '${enterprise.sha}'</echo>
     <echo>   enterprise tstamp: '${enterprise.tstamp}'</echo>
     <echo/>
     <echo>submodules:</echo>
     <echo>          themes.sha: ${themes.sha}'</echo>
     <echo/>
     <echo>geoserver</echo>
     <echo>   geoserver version: '${geoserver.version}'</echo>
     <echo>       geoserver sha: '${geoserver.sha}'</echo>
     <echo>   geoserver property: '${gs.version}'</echo>
     <echo/>
     <echo>geocat live:</echo>
     <echo>              DSTAMP: '${DSTAMP}'</echo>
     <echo>              TSTAMP: '${TSTAMP}'</echo>
     <echo>               TODAY: '${TODAY}'</echo>
     <echo>              USTAMP: '${USTAMP}'</echo>
     <echo>     enterprise live: '${enterprise.live}'</echo>
     <echo>enterprise live tag : '${enterprise.live.tag}'</echo>
  </target>
  
  <target name="doctor" description="Troubleshooting">
     <local name="_"/>
     <git dir="../docs/themes"
          command="fetch">origin</git>
     <git dir="../docs/themes" property="themes.origin"
          command="rev-parse" >--short FETCH_HEAD</git>

     <condition property="themes.check" value="true">
       <equals forcestring="true"
         arg1="${themes.sha}" arg2="${themes.origin}"
       />
     </condition>
     <echo if:set="themes.check">docs/themes ... checked</echo>
     <echo unless:set="themes.check" level="error">docs/themes update available:
       cd ../docs/themes
       git pull origin master
       cd ..
       git add themes
       git commit -m "Update documentation theme"
     </echo>
     
     <condition property="geoserver.check" value="true">
       <equals forcestring="true"
         arg1="${geoserver.version}" arg2="${gs.version}"
       />
     </condition>
     <echo if:set="geoserver.check">enterprise/pom.xml: gs.version ... checked</echo>
     <echo unless:set="geoserver.check" level="error">enterprise/pom.xml: gs.version ... update required:
        &lt;gs.version&gt;${geoserver.version}&lt;/gs.version&gt;</echo>
  </target>
  
  <target name="release-live"
          description="Update enterprise.version to enterprise.live, commit and branch">
    <antcall target="-update"><param name="release.version" value="${enterprise.live}"/></antcall>
    <git dir="../enterprise" command="add">.</git>
    <git command="commit">-m &quot;Release ${enterprise.live}&quot;</git>
    <git command="tag">-f -a ${enterprise.live.tag} -m &quot;Internal ${enterprise.live} release for GeoCat Live&quot;</git>
    <git command="revert">HEAD --no-commit</git>
    <git command="commit">-m &quot;Restore ${enterprise.version} development&quot;</git>
  </target>
  
  
  <target name="-update"
          description="Update version references for a new branch">
    <fail unless:set="release.version">release.version parameter required to update pom.xml version</fail>
    <replace dir="../enterprise">
      <include name="**/pom.xml"/>
      <replacefilter token="&lt;version&gt;${enterprise.version}&lt;/version&gt;" value="&lt;version&gt;${release.version}&lt;/version&gt;"/>
    </replace>
  </target>

</project>

